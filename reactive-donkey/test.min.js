var $jscomp={scope:{},IteratorResult:function(){},Iterator:function(){},Iterable:function(){}};$jscomp.Iterable.prototype.$$iterator=function(){};$jscomp.makeIterator=function(a){if(a.$$iterator)return a.$$iterator();if(!(a instanceof Array)&&"string"!=typeof a)throw Error();var b=0;return{next:function(){return b==a.length?{done:!0}:{done:!1,value:a[b++]}}}};$jscomp.copyProperties=function(a,b){for(var c in b)a[c]=b[c]};
$jscomp.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,d){var g=Array.prototype.slice.call(arguments,2);return b.prototype[c].apply(a,g)}};var canvas=document.getElementById("canvas");isAndroid&&isChrome&&document.getElementById("android-chrome-note").setAttribute("style","visibility:visible");
(function(){function a(){var a=document.getElementById("canvas"),c=window.innerHeight/a.clientHeight;a.style.mozTransform="scale("+c+")";a.style.webkitTransform="scale("+c+")";a.style.transform="scale("+c+")";a.style.width=window.innerWidth/c+"px"}a();window.addEventListener("resize",a)})();function extend(a,b){for(var c in b)a[c]=b[c]}function assoc(){for(var a={},b=0;b<arguments.length;b++)extend(a,arguments[b]);return a}function coordBI(a,b){return a+(b||0)|0}
function onscreen(a){return!(-300>a.x||-1E3>a.y||1E3<a.y)}function velocity(a){return assoc(a,{x:a.x+a.vx,y:a.y+a.vy})}function intersects(a,b){var c=coordBI(b.x,b.baseX),e=coordBI(a.x,a.baseX),f=coordBI(b.y,b.baseY),d=coordBI(a.y,a.baseY);return 100>Math.abs(e-c)&&100>Math.abs(d-f)}function makeElement(a){return React.DOM.div({className:a.id,style:{left:a.x+(a.baseX||0)|NaN,top:a.y+(a.baseY||0)|NaN}},a.text)}
function renderScene(a){return React.renderComponent(React.DOM.div(null,a.map(makeElement)),canvas)}function bindKey(a){var b=new Rx.Subject;Mousetrap.bind(a,function(){b.onNext(a)});return b}
var tick=Rx.Observable.merge(bindKey("space"),bindKey("up"),bindKey("right"),bindKey("left"),bindKey("down"),Rx.DOM.fromEvent(canvas,"touchstart")).buffer(Rx.Observable.interval(33)),groundStream=Rx.Observable.interval(33).map(function(a){return{id:"ground",baseX:0,y:320,x:a%280*-8}}),initialHater={id:"hater",vx:0,vy:0,x:1600,y:300},totalScore=0,haterStream=groundStream.scan(initialHater,function(a,b){a=velocity(a);return onscreen(a)?a:initialHater}),pinkieStream=tick.scan({id:"pinkie",baseY:320,
x:0,y:0,vx:0,vy:0,lives:3,gameOver:!1},function(a,b){a=velocity(a);a.vy+=.88;0<=a.y&&0<a.vy&&(a.id="pinkie",a.y=0,a.vy=0);void 0!==b[0]&&0===a.y&&(a.id="pinkie jumping",a.vy=-22,"space"===b[0]?$.mbAudio.play("effectSprite","jump"):"up"===b[0]?testWebAudioAPI():"down"===b[0]?$.mbAudio.play("effectSprite2","jump"):"left"===b[0]?testWebAudioAPI2():"right"===b[0]&&(new Audio("https://cycle23.github.io/media/sound/jump.mp3")).play());return a}).takeWhile(onscreen);
function startGame(){Rx.Observable.zipArray(groundStream,pinkieStream).subscribe(renderScene)}function gameOver(){location.reload(!0)};
